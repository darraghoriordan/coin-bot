/* tslint:disable */
/* eslint-disable */
/**
 * Coin bot Api
 * Describes the backend api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Trigger,
    TriggerFromJSON,
    TriggerFromJSONTyped,
    TriggerToJSON,
} from './';

/**
 * 
 * @export
 * @interface TriggerResult
 */
export interface TriggerResult {
    /**
     * 
     * @type {number}
     * @memberof TriggerResult
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof TriggerResult
     */
    uuid: string;
    /**
     * 
     * @type {boolean}
     * @memberof TriggerResult
     */
    result: boolean;
    /**
     * 
     * @type {Trigger}
     * @memberof TriggerResult
     */
    trigger: Trigger;
    /**
     * 
     * @type {number}
     * @memberof TriggerResult
     */
    triggerId: number;
    /**
     * 
     * @type {Date}
     * @memberof TriggerResult
     */
    createdDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof TriggerResult
     */
    updateDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof TriggerResult
     */
    deletedDate: Date;
}

export function TriggerResultFromJSON(json: any): TriggerResult {
    return TriggerResultFromJSONTyped(json, false);
}

export function TriggerResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TriggerResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'uuid': json['uuid'],
        'result': json['result'],
        'trigger': TriggerFromJSON(json['trigger']),
        'triggerId': json['triggerId'],
        'createdDate': (new Date(json['createdDate'])),
        'updateDate': (new Date(json['updateDate'])),
        'deletedDate': (new Date(json['deletedDate'])),
    };
}

export function TriggerResultToJSON(value?: TriggerResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'uuid': value.uuid,
        'result': value.result,
        'trigger': TriggerToJSON(value.trigger),
        'triggerId': value.triggerId,
        'createdDate': (value.createdDate.toISOString()),
        'updateDate': (value.updateDate.toISOString()),
        'deletedDate': (value.deletedDate.toISOString()),
    };
}


